{"version":3,"sources":["canvas.js","index.js"],"names":["Canvas","props","draw","rest","canvasRef","useRef","useEffect","animationFrameId","canvas","current","context","getContext","frameCount","getBoundingClientRect","width","height","scale","render","window","requestAnimationFrame","cancelAnimationFrame","className","style","ref","_","require","map","reverseMap","0","1","firebaseConfig","apiKey","authDomain","databaseId","projectId","storageBucket","messagingSenderId","appId","gates","backgroundColor","gate_distribution","Navigation","exact","activeClassName","to","QTopHands","gameRef","useFirestore","collection","doc","useFirestoreDocData","status","data","gameState","game","split","turn","playerType","probs","QBotHands","GateCardDeck","names","sampleSize","Object","keys","console","log","state","cards","type","gate","GateCard","name","handleCardUse","this","Array","fill","i","length","push","renderGateCard","Container","Row","Col","id","React","Component","onClick","Home","Game","bind","prevProps","prevState","setState","firebase","firestore","set","card","qubitState","includes","j","newGameState","join","axios","post","headers","then","res","table","alert","parseInt","resetGame","ctx","x","y","fillRect","stroke","r","fillStyle","arc","Math","PI","yourTurn","Button","font","clearRect","cable_heights","box_size","controlled_radii","strokeStyle","fillText","order","fillRectCenter","App","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a569090e.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst Canvas = props => {\n  const { draw, ...rest } = props\n  const canvasRef = useRef(null)\n  useEffect(() => {\n\n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    let frameCount = 0\n    let animationFrameId\n\n    const { width, height } = canvas.getBoundingClientRect()\n    // console.log(width)\n\n    // if(!rescaled){\n\n    if(canvas.width){\n      let ratio=5\n      if(canvas.width < width){\n        canvas.width = canvas.width*ratio*1.75\n        canvas.height = canvas.height*ratio\n        context.scale(ratio, ratio)\n      }\n    }\n    // }\n     // if (canvas.width !== width || canvas.height !== height) {\n     //   const { devicePixelRatio:ratio=1 } = window\n     //   const context = canvas.getContext('2d')\n     //   canvas.width = width*ratio\n     //   canvas.height = height*ratio\n     //   console.log(\"resetting\")\n     //   context.setTransform(1, 0, 0, 1, 0, 0);\n     //   context.scale(ratio, ratio)\n     // }\n\n    const render = () => {\n      frameCount++\n      draw(context, frameCount)\n      animationFrameId = window.requestAnimationFrame(render)\n    }\n    render()\n\n    return () => {\n      window.cancelAnimationFrame(animationFrameId)\n    }\n  }, [draw])\n  //asdfasdf\n  return <canvas className=\"canvas\" style={{\"width\":\"1150px\", \"height\":\"450px\", \"padding\":\"100px 50px 50px 50px\",}} ref={canvasRef} {...rest}/>\n}\n\nexport default Canvas\n","import React, { useRef, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Canvas from './canvas.js'\nimport './index.css';\nimport { render } from \"react-dom\";\nimport { BrowserRouter, NavLink, Switch, Route } from 'react-router-dom';\nimport Latex from 'react-latex'\n\nimport { Row, Col, Container, Button} from 'react-bootstrap';\nimport axios from 'axios';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport firebase from \"firebase\"\n\nimport \"firebase/firestore\";\nimport {\n  FirebaseAppProvider,\n  useFirestoreDocData,\n  useFirestore\n} from \"reactfire\";\n\n\nvar _ = require('lodash');\n\nlet map = {\"top\":0, \"bottom\":1}\nlet reverseMap = {0:\"top\", 1:\"bottom\"}\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDtKtCjmDGio_3jsEqsI0cIleqndvD4pJg\",\n  authDomain: \"georgsgame-3d44e.firebaseapp.com\",\n  databaseId: \"georgsgame-3d44e.firebaseio.com\",\n  projectId: \"georgsgame-3d44e\",\n  storageBucket: \"georgsgame-3d44e.appspot.com\",\n  messagingSenderId: \"768069468543\",\n  appId: \"1:768069468543:web:2b5b620699311106775a4a\"\n};\n\nconst gates = {\n    'H': { 'name': 'H', 'style': {backgroundColor: '#99b898'} },\n    'X': { 'name': 'X', 'style': {backgroundColor: \"#feceab\"} },\n    'Y': { 'name': 'Y', 'style': {backgroundColor: \"#ff847c\" } },\n    'Z': { 'name': 'Z', 'style': {backgroundColor: \"#e84a5f\" } },\n    'S': { 'name': 'S', 'style': {backgroundColor: \"#ffcc00\" } },\n    'S_dg': { 'name': 'S✝', 'style': {backgroundColor: \"#ffcc00\" } },\n    'S✝': { 'name': 'S✝', 'style': {backgroundColor: \"#ffcc00\" } },\n    'T': { 'name': 'T', 'style': {backgroundColor: \"#00d9ff\" } },\n    'Ry': { 'name': 'Ry', 'style': {backgroundColor: \"#9403fc\"} },\n    'T_dg': { 'name': 'T✝', 'style': {backgroundColor: \"#00d9ff\" } },\n    'T✝': { 'name': 'T✝', 'style': {backgroundColor: \"#00d9ff\" } },\n    'CX0': { 'name': 'CX0', 'style': {backgroundColor: \"#00a6ff\" } },\n    'CX1': { 'name': 'CX1', 'style': {backgroundColor: \"#00a6ff\" } },\n    // 'CY0': { 'name': 'CY0', 'style': {backgroundColor: \"#00a6ff\" } },\n    // 'CY1': { 'name': 'CY1', 'style': {backgroundColor: \"#00a6ff\" } },\n    // 'CZ0': { 'name': 'CZ0', 'style': {backgroundColor: \"#00a6ff\" } },\n    // 'CZ1': { 'name': 'CZ1', 'style': {backgroundColor: \"#00a6ff\" } },\n    // 'CH0': { 'name': 'CH0', 'style': {backgroundColor: \"#00a6ff\" } },\n    // 'CH1': { 'name': 'CH1', 'style': {backgroundColor: \"#00a6ff\" } },\n    '_': { 'name': '', 'style': {backgroundColor: 'rgba(52, 52, 52, 0)' } },\n    '*': { 'name': '', 'style': {backgroundColor: 'rgba(52, 52, 52, 0)' } },\n}\n\n\nconst gate_distribution = {\n    'H': { 'name': 'H', 'style': {backgroundColor: '#99b898'} },\n    'H': { 'name': 'H', 'style': {backgroundColor: '#99b898'} },\n    'H': { 'name': 'H', 'style': {backgroundColor: '#99b898'} },\n    'X': { 'name': 'X', 'style': {backgroundColor: \"#feceab\"} },\n    'Y': { 'name': 'Y', 'style': {backgroundColor: \"#ff847c\" } },\n    'Z': { 'name': 'Z', 'style': {backgroundColor: \"#e84a5f\" } },\n    'S': { 'name': 'S', 'style': {backgroundColor: \"#ffcc00\" } },\n    'S_dg': { 'name': 'S✝', 'style': {backgroundColor: \"#ffcc00\" } },\n    'T': { 'name': 'T', 'style': {backgroundColor: \"#00d9ff\" } },\n    'T_dg': { 'name': 'T✝', 'style': {backgroundColor: \"#00d9ff\" } },\n    'CX0': { 'name': 'CX0', 'style': {backgroundColor: \"#00a6ff\" } },\n    'CX1': { 'name': 'CX1', 'style': {backgroundColor: \"#00a6ff\" } },\n    'Ry': { 'name': 'Ry', 'style': {backgroundColor: \"#9403fc\"} },\n    // 'CY0': { 'name': 'CY0', 'style': {backgroundColor: \"#00a6ff\" } },\n    // 'CY1': { 'name': 'CY1', 'style': {backgroundColor: \"#00a6ff\" } },\n    // 'CZ0': { 'name': 'CZ0', 'style': {backgroundColor: \"#00a6ff\" } },\n    // 'CZ1': { 'name': 'CZ1', 'style': {backgroundColor: \"#00a6ff\" } },\n    // 'CH0': { 'name': 'CH0', 'style': {backgroundColor: \"#00a6ff\" } },\n    // 'CH1': { 'name': 'CH1', 'style': {backgroundColor: \"#00a6ff\" } },\n}\n\n\n\n\nconst Navigation = () => (\n  <nav>\n    <ul>\n      <li><NavLink exact activeClassName=\"current\" to='/qtop'>Player QTop</NavLink></li>\n      <li><NavLink exact activeClassName=\"current\" to='/qbot'>Player QBottom</NavLink></li>\n    </ul>\n  </nav>\n);\n\nfunction QTopHands() {\n  // easily access the Firestore library\n  const gameRef = useFirestore().collection(\"games\").doc(\"game\");\n\n  // subscribe to a document for realtime updates. just one line!\n  const { status, data } = useFirestoreDocData(gameRef);\n\n  // easily check the loading status\n  if (status === \"loading\") {\n    return <p>Fetching Data...</p>;\n  }\n\n  let first_row = data.game[0].split(',');\n  let second_row = data.game[1].split(',');\n  let gameState = [first_row, second_row];\n\n  let game = <Game gameState={gameState} turn={data.turn} playerType=\"top\" probs={data.probs}/>\n\n  return game;\n}\n\nfunction QBotHands() {\n  // easily access the Firestore library\n  const gameRef = useFirestore().collection(\"games\").doc(\"game\");\n\n  // subscribe to a document for realtime updates. just one line!\n  const { status, data } = useFirestoreDocData(gameRef);\n\n  // easily check the loading status\n  if (status === \"loading\") {\n    return <p>Fetching Data...</p>;\n  }\n\n  let first_row = data.game[0].split(',');\n  let second_row = data.game[1].split(',');\n  let gameState = [first_row, second_row];\n\n  let game = <Game gameState={gameState} turn={data.turn} playerType=\"bottom\" probs={data.probs}/>\n\n  return game;\n}\n\n\nclass GateCardDeck extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        let names = _.sampleSize(Object.keys(gate_distribution), 6);\n        // console.log(\"names\");\n        // console.log(names);\n        // let hand = Array(5);\n        // for(let i=0; i<names.length;i++){\n        //   hand[i] = gates[names[i]][\"name\"];\n        // }\n        console.log(\"hand\");\n        console.log(names);\n        // console.log(hand);\n\n        this.state = {\n            cards: names,\n        };\n    }\n\n    renderGateCard(type) {\n        const gate = gates[type];\n        return (\n        <GateCard name={gate['name']} style={gate['style']} handleCardUse={this.props.handleCardUse}/>\n        );\n    }\n\n    render() {\n        const cards = Array(5).fill(null);\n        for(let i = 0; i < this.state.cards.length; i++) {\n            cards.push(<div key={i}>{this.renderGateCard(this.state.cards[i])}</div>);\n        }\n        return (\n            <Container>\n              <Row>\n                <Col className=\"deck\">\n                    <div style={{\"color\":\"white\", \"padding\":2, \"marginBottom\":\"25px\", \"fontSize\":\"2.5rem\"}}>Gate Cards</div>\n\n                    <div id=\"card-space\" style={{\"marginLeft\":50}}>\n                    <Row className=\"cards\">\n                    {cards}\n                    </Row>\n                    </div>\n                </Col>\n                {/* <Col className=\"deck\">\n                  <h1 style={{\"color\":\"white\"}}>Strategy cards coming soon</h1>\n                </Col> */}\n\n              </Row>\n            </Container>\n\n        );\n    }\n}\n\nfunction GateCard(props) {\n    // console.log(props.gateType);\n    return (\n      // <Col>\n        <Col className=\"card\" style={props.style} onClick={()=>{props.handleCardUse(props.name)}}>\n            {props.name}\n        </Col>\n      // </Col>\n    )\n}\n\nfunction Home () {\n  return(\n  <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n    <center><h1>Georg's Game</h1></center>\n    <Navigation />\n  </FirebaseAppProvider>\n)}\n\nclass Game extends React.Component {\n\n    constructor(props){\n      super(props)\n      this.state = {\n        // gates:[['X','CZ0','CH1','CY0','H'],['X', 'CZ0', 'CH1', 'CY0', 'H']],\n        gates: props.gameState,\n        probs: props.probs,\n      }\n\n      this.handleCardUse = this.handleCardUse.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      // console.log(\"hello\");\n      // console.log(\"new gates\");\n      // console.log(this.props.gates)\n      // this.setState({})\n      // console.log(\"new_gates\", this.props.gates);\n      //\n      if(prevState.gates !== this.props.gameState) {\n        this.setState({gates: this.props.gameState})\n        console.log(\"new_gates\");\n      }\n    }\n\n    resetGame(){\n      const db=firebase.firestore();\n      db.collection('games').doc(\"game\").set({turn:0, game:[\"_,_,_,_,_\", \"_,_,_,_,_\"], probs:[\"100%\", \"0%\",\"0%\", \"0%\"]});\n    }\n\n    handleCardUse(card){\n      if(this.props.playerType == reverseMap[this.props.turn % 2]){\n        let gameState = this.state.gates\n        // console.log(this.state.gates);\n        console.log(gameState);\n        console.log()\n\n        let qubitState = gameState[map[this.props.playerType]]\n\n        for(let i = 0; i < qubitState.length; i++){\n          console.log(\">>>\")\n          console.log(i)\n          console.log(qubitState[i]);\n          console.log(\">>>\")\n\n          if(qubitState[i]==\"_\"){\n            if(!card.includes(\"C\")){\n              qubitState[i]=card;\n            }\n            else{\n              for(let j=0;j<2;j++){\n                gameState[j][i]=card\n              }\n              console.log(gameState);\n            }\n            break\n          }\n        }\n\n        let first_row = gameState[0].join(',');\n        let second_row = gameState[1].join(',');\n\n        let newGameState = [first_row, second_row];\n\n        const data = {\n          \"state\": [gameState[0], gameState[1]]\n        };\n\n        console.log(\"data\");\n        console.log(data);\n\n        const probs = `https://georgsgame.herokuapp.com/api/get/probabilities`;\n        const statevector = `https://georgsgame.herokuapp.com/api/get/statevector`;\n\n        axios.post(probs, { data }, {headers: {\n          \"Content-Type\": \"application/json\",\n        }})\n          .then(res => {\n            this.setState({probs:res.data})\n\n            console.log(\"New probs:\");\n            console.table(res.data);\n\n            const db=firebase.firestore();\n            db.collection('games').doc(\"game\").set({turn:this.props.turn + 1, game:newGameState, probs:res.data }).then()\n\n          })\n\n\n      }\n      else{\n        alert(\"Not your turn, wait for the other player.\")\n      }\n\n      if(this.props.turn == 9){\n        alert(\"Game over!\");\n\n        let gameState = this.state.gates\n\n        let first_row = gameState[0].join(',');\n        let second_row = gameState[1].join(',');\n\n        let newGameState = [first_row, second_row];\n\n        const data = {\n          \"state\": [gameState[0], gameState[1]]\n        };\n\n        const measurement = `https://georgsgame.herokuapp.com/api/get/measurement`;\n\n        axios.post(measurement, { data }, {headers: {\n          \"Content-Type\": \"application/json\",\n        }})\n          .then(res => {\n            console.log(\"request successful!\");\n            console.log(res.data);\n            if(parseInt(res.data[0]) - parseInt(res.data[1]) == 0){\n              alert(\"Constant measurement \" + res.data + \". Top wins\");\n            }\n            else{\n              alert(\"Balanced measurement  \" + res.data + \". Bottom wins\");\n            }\n            this.resetGame();\n          })\n      }\n    }\n\n    fillRect(ctx, x,y,width,height){\n      ctx.fillRect(x, y, width, height);\n      ctx.stroke()\n    }\n\n    fillRectCenter(ctx, x,y, width, height){\n      ctx.fillRect(x-(width/2), y-(width/2), width, height);\n      ctx.stroke()\n    }\n\n    fillCircle(ctx, x, y, r){\n      ctx.fillStyle = \"#00a6ff\";\n      ctx.arc(x, y, r, 0, Math.PI * 2);\n      ctx.fill();\n    }\n\n    render() {\n        let draw = (ctx, frameCount) => {\n          ctx.font = \"30px Arial\";\n          ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n          ctx.fillStyle = \"#000000\";\n          let cable_width = 500;\n          let cable_heights = [30, 90]\n          let starting_x = 20\n          this.fillRect(ctx, starting_x, cable_heights[0], cable_width, 2)\n          this.fillRect(ctx, starting_x, cable_heights[1], cable_width, 2)\n\n          const box_size = 50\n\n          const controlled_radii = [10, 50]\n\n          console.log(this.state.gates)\n\n          for(let i=0; i<this.state.gates.length; i++){\n            let y = cable_heights[i]\n            for(let j=0; j<this.state.gates[0].length; j++){\n\n              let x = j*(cable_width/(this.state.gates[0].length-1))*0.6 - starting_x\n              let type = gates[this.state.gates[i][j]];\n              // console.log(\"type\");\n              // console.log(type);\n\n              ctx.strokeStyle = \"white\";\n\n\n              if(!this.state.gates[i][j].includes(\"C\") && type[\"style\"]){\n                console.log(this.state.gates[i][j]);\n                ctx.fillStyle = type[\"style\"].backgroundColor;\n                this.fillRect(ctx, x+box_size/2, y-box_size/2, box_size, box_size)\n                ctx.fillStyle = \"#FFF\";\n                ctx.fillText(type[\"name\"], x+40, y+10);\n              }\n              else{\n                ctx.fillStyle = type[\"style\"].backgroundColor;\n                let order = null\n                if(!this.state.gates[i][j].includes(\"0\")){\n                  order = [1, 0]\n                }\n                else{\n                  order = [0, 1]\n                }\n                  // this.fillRect(ctx, x+box_size/2, y-box_size/2, radii[i], radii[i])\n                if(i==0){\n                  //cable\n                  this.fillRectCenter(ctx, x+box_size, y, 2, cable_heights[1] - cable_heights[0])\n                  //actual rectangle\n                  this.fillRectCenter(ctx, x+box_size, y, controlled_radii[order[i]], controlled_radii[order[i]])\n                }\n                else{\n                  this.fillRectCenter(ctx, x+box_size , y, controlled_radii[order[i]], controlled_radii[order[i]])\n                }\n\n                if(order[i]){\n                  ctx.font = \"25px Arial\";\n                  ctx.fillStyle = \"#FFF\";\n                  ctx.fillText(type[\"name\"], x+25, y+10);\n                }\n              }\n            }\n          }\n        }\n\n        let yourTurn = this.props.playerType == reverseMap[this.props.turn % 2] ? \"your turn\" : \"opponent's turn\"\n\n        return (\n            <div>\n                <div className=\"game-title\">Georg's Game: Circuit Showdown!</div>\n                <Container>\n                <Row>\n                  <Col>\n                  Probabilities\n                  <Container className=\"probabilites-box\">\n                    <Row>\n                      <Col>\n                      <Latex> $ p(| 00 \\rangle ) = $</Latex>{this.state.probs[0]}\n                      </Col>\n                      <Col>\n                      <Latex> $ p(| 01 \\rangle ) = $</Latex>{this.state.probs[1]}\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col>\n                      <Latex> $ p(| 10 \\rangle ) = $</Latex>{this.state.probs[2]}\n                      </Col>\n                      <Col>\n                      <Latex> $ p(| 11 \\rangle ) = $</Latex>{this.state.probs[3]}\n                      </Col>\n                    </Row>\n                  </Container>\n                  </Col>\n                  <Col></Col>\n                  <Col>\n                  Turns\n                  <Container>\n                    <Row className=\"turn-box\">Turn {this.props.turn + 1}/10 - {reverseMap[this.props.turn % 2]} ({yourTurn})</Row>\n                    <Row className=\"reset-container\"><Button className=\"reset\" onClick={()=>{this.resetGame()}}>Reset Game</Button></Row>\n                  </Container>\n                  </Col>\n                </Row>\n                </Container>\n\n                <Canvas draw={draw}/>\n                <GateCardDeck handleCardUse={this.handleCardUse}/>\n            </div>\n        )\n    }\n}\n\nfunction App() {\n  return (\n    <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n    <Switch>\n      <Route exact path='/' component={Home}></Route>\n      <Route exact path='/qtop' component={QTopHands}></Route>\n      <Route exact path='/qbot' component={QBotHands}></Route>\n    </Switch>\n    </FirebaseAppProvider>\n  );\n}\n\n// ========================================\n\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}